# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - '*'
        tags:
            # normal versions
            - "v?[0-9]+.[0-9]+.[0-9]+"
            # pre-releases
            - "v?[0-9]+.[0-9]+.[0-9]+-**"
    pull_request: {}

jobs:
    # Performs quick checks before the expensive test runs
    check-and-lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js 20.x
                uses: actions/setup-node@v4
                with:
                    node-version: 20.x

            -   name: Install Dependencies
                run: npm i

            -   name: Lint source code
                run: npm run lint
            -   name: Test package files
                run: npm run test:package

    # Runs adapter tests on all supported node versions and OSes
    adapter-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [check-and-lint]

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [20.x, 22.x]
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies
              run: npm i

            - name: Run unit tests of single functions
              run: npm run test:unit

            - name: Run integration tests (unix only)
              if: startsWith(runner.OS, 'windows') == false
              run: DEBUG=testing:* npm run test:integration

            - name: Run integration tests (windows only)
              if: startsWith(runner.OS, 'windows')
              run: set DEBUG=testing:* & npm run test:integration

    # Deploys the final package to NPM
    deploy:
        needs: [adapter-tests]

        # Trigger this step only when a commit on master is tagged with a version number
        if: |
          contains(github.event.head_commit.message, '[skip ci]') == false &&
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags/v')

        runs-on: ubuntu-latest

      # Write permissions are required to create Github releases
        permissions:
          contents: write

        steps:
          - uses: ioBroker/testing-action-deploy@v1
            with:
              node-version: '20.x'
              # Uncomment the following line if your adapter cannot be installed using 'npm ci'
              # install-command: 'npm install'
              build: false
              npm-token: ${{ secrets.NPM_TOKEN }}
              github-token: ${{ secrets.GITHUB_TOKEN }}

